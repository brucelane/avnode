/*
 * jQuery Birthday Picker: v1.4 - 10/16/2011
 * http://abecoffman.com/stuff/birthdaypicker
 *
 * Copyright (c) 2010 Abe Coffman
 * Dual licensed under the MIT and GPL licenses.
 *
 */
//(function(a){var b={"short":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"long":["January","February","March","April","May","June","July","August","September","October","November","December"]},c=new Date,d=c.getFullYear(),e=c.getMonth()+1,f=c.getDate();a.fn.birthdaypicker=function(c){var e={maxAge:120,minAge:0,futureDates:false,maxYear:d,dateFormat:"middleEndian",monthFormat:"short",placeholder:true,legend:"",defaultDate:false,fieldName:"birth_date",fieldId:"birth_date",hiddenDate:true,onChange:null,tabindex:null};return this.each(function(){if(c){a.extend(e,c)}var f=a("<div class='row'></div>"),g=a("<div class='span2'><select class='span2' name='birth[year]'></select></div>"),h=a("<div class='span3'><select class='span3' name='birth[month]'></select></div>"),i=a("<div class='span1'><select class='span1' name='birth[day]'></select></div>");if(e["legend"]){a("<legend>"+e["legend"]+"</legend>").appendTo(f)}var j=e["tabindex"];if(e["dateFormat"]=="bigEndian"){f.append(g).append(h).append(i);if(j!=null){g.attr("tabindex",j);h.attr("tabindex",j++);i.attr("tabindex",j++)}}else if(e["dateFormat"]=="littleEndian"){f.append(i).append(h).append(g);if(j!=null){i.attr("tabindex",j);h.attr("tabindex",j++);g.attr("tabindex",j++)}}else{f.append(h).append(i).append(g);if(j!=null){h.attr("tabindex",j);i.attr("tabindex",j++);g.attr("tabindex",j++)}}if(e["placeholder"]){a("<option value='0'>Year:</option>").appendTo(g);a("<option value='0'>Month:</option>").appendTo(h);a("<option value='0'>Day:</option>").appendTo(i)}var k;if(e["defaultDate"]){var l=new Date(e["defaultDate"]),m=l.getFullYear(),n=l.getMonth()+1,o=l.getDate();k=m+"-"+n+"-"+o}if(e["hiddenDate"]){a("<input type='hidden' name='"+e["fieldName"]+"'/>").attr("id",e["fieldId"]).val(k).appendTo(f)}var p=d-e["minAge"];var q=d-e["maxAge"];if(e["futureDates"]&&e["maxYear"]!=d){if(e["maxYear"]>1e3){p=e["maxYear"]}else{p=d+e["maxYear"]}}while(p>=q){a("<option></option>").attr("value",p).text(p).appendTo(g);p--}for(var r=0;r<12;r++){a("<option></option>").attr("value",r+1).text(b[e["monthFormat"]][r]).appendTo(h)}for(var s=1;s<32;s++){a("<option></option>").attr("value",s).text(s).appendTo(i)}a(this).append(f);if(e["defaultDate"]){var t=new Date(e["defaultDate"]);g.val(t.getFullYear());h.val(t.getMonth()+1);i.val(t.getDate())}f.change(function(){var c=new Date,d=c.getFullYear(),f=c.getMonth()+1,j=c.getDate(),l=g.val(),m=h.val(),n=i.val(),o=(new Date(l,m,0)).getDate(),p=parseInt(h.children(":last").val()),q=parseInt(i.children(":last").val());if(q>o){while(q>o){i.children(":last").remove();q--}}else if(q<o){while(q<o){q++;i.append("<option value="+q+">"+q+"</option>")}}if(!e["futureDates"]&&l==d){if(p>f){while(p>f){h.children(":last").remove();p--}i.children(":first").attr("selected","selected")}}if(l!=d&&p!=12){while(p<12){h.append("<option value="+(p+1)+">"+b[e["monthFormat"]][p]+"</option>");p++}}if(l*m*n!=0){k=l+"-"+m+"-"+n;a(this).find("#"+e["fieldId"]).val(k);if(e["onChange"]!=null){e["onChange"](k)}}})})}})(jQuery)


/*!
 * jQuery Birthday Picker: v1.4 - 10/16/2011
 * http://abecoffman.com/stuff/birthdaypicker
 *
 * Copyright (c) 2010 Abe Coffman
 * Dual licensed under the MIT and GPL licenses.
 *
 */

(function( $ ){

	// plugin variables
	var months = {
		"short": ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
		"long": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"] },
			todayDate = new Date(),
			todayYear = todayDate.getFullYear(),
			todayMonth = todayDate.getMonth() + 1,
			todayDay = todayDate.getDate();


	$.fn.birthdaypicker = function( options ) {

		var settings = {
			"maxAge"			: 120,
			"minAge"			: 0,
			"futureDates" 		: false,
			"maxYear" 			: todayYear,
			"dateFormat"		: "middleEndian",
			"monthFormat" 		: "short",
			"placeholder" 		: true,
			"legend"			: "",
			"defaultDate" 		: false,
			"fieldName" 		: "birthdate",
			"fieldId" 			: "birthdate",
			"hiddenDate"		: true,
			"onChange"			: null,
			"tabindex"			: null
		};

		return this.each(function() {

			if (options) { $.extend(settings, options); }

			// Create the html picker skeleton
			var $fieldset = 	$("<fieldset class='row'></fieldset>"),
				$year = 		$("<select class='span2' autocomplete='off' name='birth[year]'></select>"),
				$month = 		$("<select class='span3' autocomplete='off' name='birth[month]'></select>"),
				$day = 			$("<select class='span1' autocomplete='off' name='birth[day]'></select>"),
				$yearCnt = 		$("<label class='span2'></label>"),
				$monthCnt = 	$("<label class='span3'></label>"),
				$dayCnt = 		$("<label class='span1'></label>");


			var tabindex = settings["tabindex"];

			// Deal with the various Date Formats
			if (settings["dateFormat"] == "bigEndian") {
				if (settings["legend"]) {
					$("<span>" + settings["legend"] + "</span>").appendTo($yearCnt);
					$("<span><br /></span>").appendTo($monthCnt);
					$("<span><br /></span>").appendTo($dayCnt);
				}
				$fieldset.append($yearCnt.append($year)).append($monthCnt.append($month)).append($dayCnt.append($day));
				if (tabindex != null) {
					$year.attr('tabindex', tabindex);
					$month.attr('tabindex', tabindex++);
					$day.attr('tabindex', tabindex++);
				}
			} else if (settings["dateFormat"] == "littleEndian") {
				if (settings["legend"]) {
					$("<span><br /></span>").appendTo($yearCnt);
					$("<span><br /></span>").appendTo($monthCnt);
					$("<span>" + settings["legend"] + "</span>").appendTo($dayCnt);
				}
				$fieldset.append($day).append($month).append($year);
				if (tabindex != null) {
					$day.attr('tabindex', tabindex);
					$month.attr('tabindex', tabindex++);
					$year.attr('tabindex', tabindex++);
				}
			} else {
				if (settings["legend"]) {
					$("<span><br /></span>").appendTo($yearCnt);
					$("<span>" + settings["legend"] + "</span>").appendTo($monthCnt);
					$("<span><br /></span>").appendTo($dayCnt);
				}
				$fieldset.append($month).append($day).append($year);
				if (tabindex != null) {
					$month.attr('tabindex', tabindex);
					$day.attr('tabindex', tabindex++);
					$year.attr('tabindex', tabindex++);
				}
			}

			// Add the option placeholders if specified
			if (settings["placeholder"]) {
				$("<option value='0'>Year:</option>").appendTo($year);
				$("<option value='0'>Month:</option>").appendTo($month);
				$("<option value='0'>Day:</option>").appendTo($day);
			}

			var hiddenDate;
			if (settings["defaultDate"]) {
				var defDate = new Date(settings["defaultDate"] + "T00:00:00"),
				defYear = defDate.getFullYear(),
				defMonth = defDate.getMonth() + 1,
				defDay = defDate.getDate();
				hiddenDate = defYear + "-" + defMonth + "-" + defDay;
			}

			// Create the hidden date markup
			if (settings["hiddenDate"]) {
				$("<input type='hidden' name='" + settings["fieldName"] + "'/>")
						.attr("id", settings["fieldId"])
						.val(hiddenDate)
						.appendTo($fieldset);
			}

			// Build the initial option sets
			var startYear = todayYear - settings["minAge"];
			var endYear = todayYear - settings["maxAge"];
			if (settings["futureDates"] && settings["maxYear"] != todayYear) {
				if (settings["maxYear"] > 1000) { startYear = settings["maxYear"]; }
				else { startYear = todayYear + settings["maxYear"]; }
			}
			for (var i=startYear; i>=endYear; i--) { $("<option></option>").attr("value", i).text(i).appendTo($year); }
			for (var j=0; j<12; j++) { $("<option></option>").attr("value", j+1).text(months[settings["monthFormat"]][j]).appendTo($month); }
			for (var k=1; k<32; k++) { $("<option></option>").attr("value", k).text(k).appendTo($day); }
			$(this).append($fieldset);

			// Set the default date if given
			if (settings["defaultDate"]) {
				var date = new Date(settings["defaultDate"] + "T00:00:00");
				$year.val(date.getFullYear());
				$month.val(date.getMonth() + 1);
				$day.val(date.getDate());
			}

			// Update the option sets according to options and user selections
			$fieldset.change(function() {
						// todays date values
				var todayDate = new Date(),
						todayYear = todayDate.getFullYear(),
						todayMonth = todayDate.getMonth() + 1,
						todayDay = todayDate.getDate(),
						// currently selected values
						selectedYear = parseInt($year.val(), 10),
						selectedMonth = parseInt($month.val(), 10),
						selectedDay = parseInt($day.val(), 10),
						// number of days in currently selected year/month
						actMaxDay = (new Date(selectedYear, selectedMonth, 0)).getDate(),
						// max values currently in the markup
						curMaxMonth = parseInt($month.children(":last").val()),
						curMaxDay = parseInt($day.children(":last").val());

				// Dealing with the number of days in a month
				// http://bugs.jquery.com/ticket/3041
				if (curMaxDay > actMaxDay) {
					while (curMaxDay > actMaxDay) {
						$day.children(":last").remove();
						curMaxDay--;
					}
				} else if (curMaxDay < actMaxDay) {
					while (curMaxDay < actMaxDay) {
						curMaxDay++;
						$day.append("<option value=" + curMaxDay + ">" + curMaxDay + "</option>");
					}
				}

				// Dealing with future months/days in current year
				// or months/days that fall after the minimum age
				if (!settings["futureDates"] && selectedYear == startYear) {
					if (curMaxMonth > todayMonth) {
						while (curMaxMonth > todayMonth) {
							$month.children(":last").remove();
							curMaxMonth--;
						}
						// reset the day selection
						$day.children(":first").attr("selected", "selected");
					}
					if (selectedMonth === todayMonth) {
							while (curMaxDay > todayDay) {
									$day.children(":last").remove();
									curMaxDay -= 1;
							}
					}
				}

				// Adding months back that may have been removed
				// http://bugs.jquery.com/ticket/3041
				if (selectedYear != startYear && curMaxMonth != 12) {
					while (curMaxMonth < 12) {
						$month.append("<option value=" + (curMaxMonth+1) + ">" + months[settings["monthFormat"]][curMaxMonth] + "</option>");
						curMaxMonth++;
					}
				}

				// update the hidden date
				if ((selectedYear * selectedMonth * selectedDay) != 0) {
					hiddenDate = selectedYear + "-" + selectedMonth + "-" + selectedDay;
					$(this).find('#'+settings["fieldId"]).val(hiddenDate);
					if (settings["onChange"] != null) {
						settings["onChange"](hiddenDate);
					}
				}
			});
		});
	};
})( jQuery );